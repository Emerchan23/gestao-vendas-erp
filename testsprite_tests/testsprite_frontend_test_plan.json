[
  {
    "id": "TC001",
    "title": "User Authentication Success with Valid Credentials",
    "description": "Verify that a user can successfully login using valid credentials and receives a JWT token.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Enter valid username and password"
      },
      {
        "type": "action",
        "description": "Submit login form"
      },
      {
        "type": "assertion",
        "description": "Verify that login is successful and JWT token is returned"
      },
      {
        "type": "assertion",
        "description": "Verify user session is initialized"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Authentication Failure with Invalid Credentials",
    "description": "Ensure the system rejects login attempts with incorrect username or password.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Enter invalid username and/or password"
      },
      {
        "type": "action",
        "description": "Submit login form"
      },
      {
        "type": "assertion",
        "description": "Verify that login fails with appropriate error message"
      },
      {
        "type": "assertion",
        "description": "Verify no JWT token is issued"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Multi-Company Data Isolation",
    "description": "Verify that data for multiple companies remains isolated and independent.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as admin"
      },
      {
        "type": "action",
        "description": "Create two different companies with unique configurations"
      },
      {
        "type": "action",
        "description": "Add clients, products and sales under Company A"
      },
      {
        "type": "action",
        "description": "Switch context to Company B"
      },
      {
        "type": "assertion",
        "description": "Verify clients, products, and sales from Company A are not visible under Company B"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Client Registration with Valid CPF/CNPJ",
    "description": "Verify that users can register clients only if CPF or CNPJ is valid and data is properly saved.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to client registration page"
      },
      {
        "type": "action",
        "description": "Enter all required client fields with valid CPF or CNPJ"
      },
      {
        "type": "action",
        "description": "Submit the form"
      },
      {
        "type": "assertion",
        "description": "Verify client is created successfully and data is saved correctly"
      },
      {
        "type": "assertion",
        "description": "Verify client appears in client list with accurate details"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Client Registration with Invalid CPF/CNPJ",
    "description": "Ensure client registration fails when invalid CPF or CNPJ is provided, showing user-friendly validation errors.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to client registration page"
      },
      {
        "type": "action",
        "description": "Enter invalid CPF or CNPJ format"
      },
      {
        "type": "action",
        "description": "Submit the form"
      },
      {
        "type": "assertion",
        "description": "Verify error message indicating invalid CPF/CNPJ is shown"
      },
      {
        "type": "assertion",
        "description": "Verify client is not created in the system"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Product Catalogue Creation and Validation",
    "description": "Verify that products can be created with valid names, categories, and prices, and that validations prevent invalid entries.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to product creation page"
      },
      {
        "type": "action",
        "description": "Enter valid product name, category, price, and stock quantity"
      },
      {
        "type": "action",
        "description": "Submit the form"
      },
      {
        "type": "assertion",
        "description": "Verify product is saved and listed correctly with accurate details"
      },
      {
        "type": "action",
        "description": "Attempt to create a product with invalid price (negative or zero)"
      },
      {
        "type": "assertion",
        "description": "Verify validation prevents creation and shows proper error message"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Sales Module Multi-Item Transaction with Stock Update",
    "description": "Verify that the sales module correctly processes multi-item sales, calculates totals accurately, and updates product stock accordingly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login and navigate to sales entry page"
      },
      {
        "type": "action",
        "description": "Select an existing client"
      },
      {
        "type": "action",
        "description": "Add multiple products with specified quantities to the sale"
      },
      {
        "type": "action",
        "description": "Submit the sale"
      },
      {
        "type": "assertion",
        "description": "Verify total price is calculated correctly including all items"
      },
      {
        "type": "assertion",
        "description": "Verify product stock quantities are reduced correctly"
      },
      {
        "type": "assertion",
        "description": "Verify sale record is saved with correct details"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Sales Module Error Handling for Insufficient Stock",
    "description": "Ensure sales cannot be completed if requested quantities exceed available stock.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Choose a product with limited stock"
      },
      {
        "type": "action",
        "description": "Attempt to add quantity exceeding available stock"
      },
      {
        "type": "action",
        "description": "Submit the sale"
      },
      {
        "type": "assertion",
        "description": "Verify error message indicating insufficient stock is displayed"
      },
      {
        "type": "assertion",
        "description": "Verify sale is not completed and stock is unchanged"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Budget Creation, PDF Generation and Email Dispatch",
    "description": "Verify that budgets can be created with client and products, customized visually, generated as PDFs, and successfully sent by email.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to budget creation page"
      },
      {
        "type": "action",
        "description": "Select an existing client"
      },
      {
        "type": "action",
        "description": "Add multiple products with quantities and prices"
      },
      {
        "type": "action",
        "description": "Apply visual customizations to budget layout"
      },
      {
        "type": "action",
        "description": "Generate PDF of the budget"
      },
      {
        "type": "assertion",
        "description": "Verify PDF is generated correctly reflecting budget data and layout"
      },
      {
        "type": "action",
        "description": "Send budget PDF by configured email"
      },
      {
        "type": "assertion",
        "description": "Verify email is sent and received with correct budget attachment"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Budget Creation with Invalid Email Configuration",
    "description": "Ensure the system notifies the user appropriately if email sending fails due to invalid SMTP or email settings during budget dispatch.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Configure system with invalid SMTP settings"
      },
      {
        "type": "action",
        "description": "Create a budget with valid client and products"
      },
      {
        "type": "action",
        "description": "Attempt to send budget by email"
      },
      {
        "type": "assertion",
        "description": "Verify system shows error related to email sending failure"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Financial Transactions: Receipts and Payments Recording",
    "description": "Verify the system correctly registers and categorizes financial transactions like receipts, payments, advances, and reconciliations.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to financial module"
      },
      {
        "type": "action",
        "description": "Create a receipt entry with valid data"
      },
      {
        "type": "action",
        "description": "Create a payment entry with valid data"
      },
      {
        "type": "action",
        "description": "Record advances and adjustments"
      },
      {
        "type": "assertion",
        "description": "Verify all financial records save accurately and reflect properly in balances"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Dashboard Real-Time Metrics and Graph Updates",
    "description": "Verify dashboard KPIs, sales graphs, and financial reports update in real time as data changes occur.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Load the dashboard"
      },
      {
        "type": "action",
        "description": "Perform sales and financial transactions"
      },
      {
        "type": "assertion",
        "description": "Verify that dashboard values and graphs reflect the latest data without delay"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Backup Export and Import with Data Integrity",
    "description": "Verify system can export full backup in JSON format, import backup with options for merge or overwrite, and maintain data integrity.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Export backup from system"
      },
      {
        "type": "assertion",
        "description": "Verify JSON backup file contains all required data correctly"
      },
      {
        "type": "action",
        "description": "Import backup with merge option"
      },
      {
        "type": "assertion",
        "description": "Verify data is merged without duplications or loss"
      },
      {
        "type": "action",
        "description": "Import backup with overwrite option"
      },
      {
        "type": "assertion",
        "description": "Verify previous data is replaced accurately"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "System Configuration: SMTP and Preferences Update",
    "description": "Verify that system settings like SMTP credentials, layout preferences, and user options can be updated and persist correctly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access system configuration page"
      },
      {
        "type": "action",
        "description": "Update SMTP settings with valid data"
      },
      {
        "type": "action",
        "description": "Change layout and preference settings"
      },
      {
        "type": "action",
        "description": "Save changes"
      },
      {
        "type": "assertion",
        "description": "Verify settings are saved and applied system-wide"
      },
      {
        "type": "assertion",
        "description": "Send test email to verify SMTP configuration"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Security: Authorization Middleware Blocking Unauthorized Access",
    "description": "Ensure security middleware blocks unauthorized API calls and pages correctly if JWT token is missing or invalid.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt API access without authentication token"
      },
      {
        "type": "assertion",
        "description": "Verify access is denied with 401 Unauthorized response"
      },
      {
        "type": "action",
        "description": "Attempt API access with expired or invalid JWT token"
      },
      {
        "type": "assertion",
        "description": "Verify access is denied with appropriate error message"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Responsive UI Behavior Across Devices",
    "description": "Verify that the user interface renders correctly and remains usable on multiple device viewports including desktops, tablets, and mobile phones.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access the application using desktop viewport"
      },
      {
        "type": "assertion",
        "description": "Verify layout, navigation menus, forms, and components render correctly"
      },
      {
        "type": "action",
        "description": "Resize viewport to tablet size"
      },
      {
        "type": "assertion",
        "description": "Verify UI adapts properly without content overlap or hidden elements"
      },
      {
        "type": "action",
        "description": "Resize viewport to mobile size"
      },
      {
        "type": "assertion",
        "description": "Verify navigation collapses to hamburger menu and all UI elements remain accessible"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Performance: Response Time Under Load for Basic Operations",
    "description": "Validate that basic system operations including login, data fetching, and form submissions respond within 2 seconds under typical load conditions.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Measure response time for login with valid credentials"
      },
      {
        "type": "assertion",
        "description": "Verify response time is less than 2 seconds"
      },
      {
        "type": "action",
        "description": "Fetch dashboard data"
      },
      {
        "type": "assertion",
        "description": "Verify data loads within 2 seconds"
      },
      {
        "type": "action",
        "description": "Submit client registration form"
      },
      {
        "type": "assertion",
        "description": "Verify form submission completes under 2 seconds"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Backup Import: Handling Malformed JSON Backup Files",
    "description": "Verify system gracefully handles malformed or corrupted JSON backup files during import, providing proper error reports to the user.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to import a backup with invalid JSON structure"
      },
      {
        "type": "assertion",
        "description": "Verify import process halts with descriptive error message"
      },
      {
        "type": "assertion",
        "description": "Verify no partial data import or corruption occurs"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "User Preferences Persistence and Isolation",
    "description": "Verify that user-specific preferences are saved correctly and isolated between different users.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as User A and set preferences"
      },
      {
        "type": "action",
        "description": "Logout and login as User B"
      },
      {
        "type": "assertion",
        "description": "Verify User B's preferences are independent of User A's settings"
      },
      {
        "type": "action",
        "description": "Login back as User A"
      },
      {
        "type": "assertion",
        "description": "Verify User A preferences are persisted correctly"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "First-Time Installation Auto-Setup Flow",
    "description": "Verify that the system performs automated first-time installation including dependency checks, configuration, and initialization.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Run installation script on fresh environment"
      },
      {
        "type": "assertion",
        "description": "Verify all prerequisites and dependencies are checked and met"
      },
      {
        "type": "assertion",
        "description": "Verify initial system configuration is completed"
      },
      {
        "type": "assertion",
        "description": "Verify application is started and accessible after installation"
      }
    ]
  }
]
